/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/courses": {
    /** @description Returns a list of courses */
    get: operations["getCourses"];
  };
  "/courses/{id}": {
    /** @description Returns a specific course */
    get: operations["getCourse"];
  };
  "/courses/{id}/district": {
    /** @description Returns the district for a course */
    get: operations["getDistrictForCourse"];
  };
  "/courses/{id}/resources": {
    /** @description Returns the resources for a course */
    get: operations["getResourcesForCourse"];
  };
  "/courses/{id}/schools": {
    /** @description Returns the schools for a course */
    get: operations["getSchoolsForCourse"];
  };
  "/courses/{id}/sections": {
    /** @description Returns the sections for a course */
    get: operations["getSectionsForCourse"];
  };
  "/districts": {
    /** @description Returns a list of districts. In practice this will only return the one district associated with the bearer token */
    get: operations["getDistricts"];
  };
  "/districts/{id}": {
    /** @description Returns a specific district */
    get: operations["getDistrict"];
  };
  "/resources": {
    /** @description Returns a list of resources */
    get: operations["getResources"];
  };
  "/resources/{id}": {
    /** @description Returns a specific resource */
    get: operations["getResource"];
  };
  "/resources/{id}/courses": {
    /** @description Returns the courses for a resource */
    get: operations["getCoursesForResource"];
  };
  "/resources/{id}/sections": {
    /** @description Returns the sections for a resource */
    get: operations["getSectionsForResource"];
  };
  "/resources/{id}/users": {
    /** @description Returns the student and/or teacher users for a resource */
    get: operations["getUsersForResource"];
  };
  "/schools": {
    /** @description Returns a list of schools */
    get: operations["getSchools"];
  };
  "/schools/{id}": {
    /** @description Returns a specific school */
    get: operations["getSchool"];
  };
  "/schools/{id}/courses": {
    /** @description Returns the courses for a school */
    get: operations["getCoursesForSchool"];
  };
  "/schools/{id}/district": {
    /** @description Returns the district for a school */
    get: operations["getDistrictForSchool"];
  };
  "/schools/{id}/sections": {
    /** @description Returns the sections for a school */
    get: operations["getSectionsForSchool"];
  };
  "/schools/{id}/terms": {
    /** @description Returns the terms for a school */
    get: operations["getTermsForSchool"];
  };
  "/schools/{id}/users": {
    /** @description Returns the staff, student, and/or teacher users for a school */
    get: operations["getUsersForSchool"];
  };
  "/sections": {
    /** @description Returns a list of sections */
    get: operations["getSections"];
  };
  "/sections/{id}": {
    /** @description Returns a specific section */
    get: operations["getSection"];
  };
  "/sections/{id}/course": {
    /** @description Returns the course for a section */
    get: operations["getCourseForSection"];
  };
  "/sections/{id}/district": {
    /** @description Returns the district for a section */
    get: operations["getDistrictForSection"];
  };
  "/sections/{id}/resources": {
    /** @description Returns the resources for a section */
    get: operations["getResourcesForSection"];
  };
  "/sections/{id}/school": {
    /** @description Returns the school for a section */
    get: operations["getSchoolForSection"];
  };
  "/sections/{id}/term": {
    /** @description Returns the term for a section */
    get: operations["getTermForSection"];
  };
  "/sections/{id}/users": {
    /** @description Returns the student and/or teacher users for a section */
    get: operations["getUsersForSection"];
  };
  "/terms": {
    /** @description Returns a list of terms */
    get: operations["getTerms"];
  };
  "/terms/{id}": {
    /** @description Returns a specific term */
    get: operations["getTerm"];
  };
  "/terms/{id}/district": {
    /** @description Returns the district for a term */
    get: operations["getDistrictForTerm"];
  };
  "/terms/{id}/sections": {
    /** @description Returns the sections for a term */
    get: operations["getSectionsForTerm"];
  };
  "/terms/{id}/schools": {
    /** @description Returns the schools for a term */
    get: operations["getSchoolsForTerm"];
  };
  "/users": {
    /** @description Returns a list of contact, district admin, staff, student, and/or teacher users */
    get: operations["getUsers"];
  };
  "/users/{id}": {
    /** @description Returns a specific user */
    get: operations["getUser"];
  };
  "/users/{id}/district": {
    /** @description Returns the district for a user */
    get: operations["getDistrictForUser"];
  };
  "/users/{id}/mycontacts": {
    /** @description Returns the contact users for a student user */
    get: operations["getContactsForUser"];
  };
  "/users/{id}/mystudents": {
    /** @description Returns the student users for a teacher or contact user */
    get: operations["getStudentsForUser"];
  };
  "/users/{id}/myteachers": {
    /** @description Returns the teacher users for a student user */
    get: operations["getTeachersForUser"];
  };
  "/users/{id}/resources": {
    /** @description Returns the resources for a user */
    get: operations["getResourcesForUser"];
  };
  "/users/{id}/schools": {
    /** @description Returns the schools for a user */
    get: operations["getSchoolsForUser"];
  };
  "/users/{id}/sections": {
    /** @description Returns the sections for a user */
    get: operations["getSectionsForUser"];
  };
  "/events": {
    /** @description Returns a list of events */
    get: operations["getEvents"];
  };
  "/events/{id}": {
    /** @description Returns the specific event */
    get: operations["getEvent"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    BadRequest: {
      message?: string;
    };
    InternalError: {
      message?: string;
    };
    Link: {
      /** @enum {string} */
      rel?: "next" | "prev" | "self";
      uri?: string;
    };
    NotFound: {
      message?: string;
    };
    CoursesResponse: {
      data?: components["schemas"]["CourseResponse"][];
      links?: components["schemas"]["Link"][];
    };
    CourseResponse: {
      data?: components["schemas"]["Course"];
    };
    DistrictsResponse: {
      data?: components["schemas"]["DistrictResponse"][];
      links?: components["schemas"]["Link"][];
    };
    DistrictResponse: {
      data?: components["schemas"]["District"];
    };
    ResourcesResponse: {
      data?: components["schemas"]["ResourceResponse"][];
      links?: components["schemas"]["Link"][];
    };
    ResourceResponse: {
      data?: components["schemas"]["Resource"];
    };
    SectionsResponse: {
      data?: components["schemas"]["SectionResponse"][];
      links?: components["schemas"]["Link"][];
    };
    SectionResponse: {
      data?: components["schemas"]["Section"];
    };
    SchoolsResponse: {
      data?: components["schemas"]["SchoolResponse"][];
      links?: components["schemas"]["Link"][];
    };
    SchoolResponse: {
      data?: components["schemas"]["School"];
    };
    TermsResponse: {
      data?: components["schemas"]["TermResponse"][];
      links?: components["schemas"]["Link"][];
    };
    TermResponse: {
      data?: components["schemas"]["Term"];
    };
    UsersResponse: {
      data?: components["schemas"]["UserResponse"][];
      links?: components["schemas"]["Link"][];
    };
    UserResponse: {
      data?: components["schemas"]["User"];
    };
    Course: {
      id?: string;
      name?: string | null;
      number?: string | null;
      district?: string;
    };
    Credentials: {
      district_username?: string;
    };
    District: {
      id?: string;
      name?: string;
      mdr_number?: string | null;
      nces_id?: string | null;
      sis_type?: string;
      /** @enum {string|null} */
      state?: "running" | "pending" | "error" | "paused" | "" | "success" | null;
      /** Format: datetime */
      last_sync?: string | null;
      error?: string;
      /** Format: datetime */
      pause_start?: string | null;
      /** Format: datetime */
      pause_end?: string | null;
      /** Format: date */
      launch_date?: string;
      portal_url?: string;
      login_methods?: string[];
      district_contact?: components["schemas"]["DistrictContact"];
    };
    Location: {
      address?: string | null;
      city?: string | null;
      state?: string | null;
      zip?: string | null;
      lat?: string | null;
      lon?: string | null;
    };
    Name: {
      first?: string | null;
      middle?: string | null;
      last?: string | null;
    };
    Principal: {
      name?: string | null;
      email?: string | null;
    };
    Resource: {
      /** Format: date-time */
      created?: string;
      district?: string;
      roles?: ("teacher" | "student")[];
      id?: string;
      title?: string;
      /** Format: date-time */
      updated?: string;
      resource_id?: string;
    };
    Roles: {
      contact?: components["schemas"]["Contact"];
      district_admin?: components["schemas"]["DistrictAdmin"];
      staff?: components["schemas"]["Staff"];
      student?: components["schemas"]["Student"];
      teacher?: components["schemas"]["Teacher"];
    };
    School: {
      id?: string;
      /** Format: datetime */
      created?: string;
      district?: string;
      /** @enum {string|null} */
      high_grade?: "InfantToddler" | "Preschool" | "PreKindergarten" | "TransitionalKindergarten" | "Kindergarten" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "10" | "11" | "12" | "13" | "PostGraduate" | "Ungraded" | "Other" | "" | null;
      /** Format: datetime */
      last_modified?: string;
      location?: components["schemas"]["Location"];
      /** @enum {string|null} */
      low_grade?: "InfantToddler" | "Preschool" | "PreKindergarten" | "TransitionalKindergarten" | "Kindergarten" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "10" | "11" | "12" | "13" | "PostGraduate" | "Ungraded" | "Other" | "" | null;
      name?: string;
      nces_id?: string | null;
      phone?: string | null;
      principal?: components["schemas"]["Principal"];
      school_number?: string;
      sis_id?: string;
      state_id?: string | null;
      mdr_number?: string | null;
      ext?: Record<string, never>;
    };
    SchoolEnrollment: {
      school?: string;
      /** Format: datetime */
      start_date?: string;
      /** Format: datetime */
      end_date?: string;
    };
    Section: {
      id?: string;
      course?: string | null;
      /** Format: datetime */
      created?: string;
      district?: string;
      /** @enum {string|null} */
      grade?: "InfantToddler" | "Preschool" | "PreKindergarten" | "TransitionalKindergarten" | "Kindergarten" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "10" | "11" | "12" | "13" | "PostGraduate" | "Ungraded" | "Other" | "" | null;
      /** Format: datetime */
      last_modified?: string;
      name?: string;
      period?: string | null;
      school?: string;
      section_number?: string | null;
      sis_id?: string;
      students?: string[];
      /** @enum {string|null} */
      subject?: "english/language arts" | "math" | "science" | "social studies" | "language" | "homeroom/advisory" | "interventions/online learning" | "technology and engineering" | "PE and health" | "arts and music" | "other" | "" | null;
      teacher?: string | null;
      teachers?: string[];
      term_id?: string | null;
      ext?: Record<string, never>;
    };
    StudentRelationship: {
      student?: string;
      /** @enum {string|null} */
      relationship?: "Parent" | "Grandparent" | "Self" | "Aunt/Uncle" | "Sibling" | "Other" | "" | null;
      /** @enum {string|null} */
      type?: "Parent/Guardian" | "Emergency" | "Primary" | "Secondary" | "Family" | "Other" | "" | null;
    };
    Term: {
      id?: string;
      name?: string | null;
      /** Format: datetime */
      start_date?: string | null;
      /** Format: datetime */
      end_date?: string | null;
      district?: string;
    };
    Contact: {
      legacy_id?: string;
      phone?: string | null;
      /** @enum {string|null} */
      phone_type?: "Cell" | "Home" | "Work" | "Other" | "" | null;
      sis_id?: string | null;
      student_relationships?: components["schemas"]["StudentRelationship"][];
    };
    DistrictAdmin: {
      legacy_id?: string;
      title?: string | null;
    };
    Staff: {
      legacy_id?: string;
      credentials?: components["schemas"]["Credentials"];
      department?: string | null;
      roles?: string[];
      schools?: string[];
      staff_id?: string;
      title?: string | null;
      ext?: Record<string, never>;
    };
    Student: {
      legacy_id?: string;
      /** Format: datetime */
      created?: string;
      credentials?: components["schemas"]["Credentials"];
      dob?: string | null;
      /** @enum {string|null} */
      ell_status?: "Y" | "N" | "" | null;
      enrollments?: components["schemas"]["SchoolEnrollment"][];
      /** @enum {string|null} */
      gender?: "M" | "F" | "X" | "" | null;
      graduation_year?: string | null;
      /** @enum {string|null} */
      grade?: "InfantToddler" | "Preschool" | "PreKindergarten" | "TransitionalKindergarten" | "Kindergarten" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "10" | "11" | "12" | "13" | "PostGraduate" | "Ungraded" | "Other" | "" | null;
      /** @enum {string|null} */
      hispanic_ethnicity?: "Y" | "N" | "" | null;
      home_language_name?: string | null;
      home_language_code?: string | null;
      /** @enum {string|null} */
      home_language?: "English" | "Albanian" | "Amharic" | "Arabic" | "Bengali" | "Bosnian" | "Burmese" | "Cantonese" | "Chinese" | "Dutch" | "Farsi" | "French" | "German" | "Hebrew" | "Hindi" | "Hmong" | "Ilocano" | "Japanese" | "Javanese" | "Karen" | "Khmer" | "Korean" | "Laotian" | "Latvian" | "Malay" | "Mandarin" | "Nepali" | "Oromo" | "Polish" | "Portuguese" | "Punjabi" | "Romanian" | "Russian" | "Samoan" | "Serbian" | "Somali" | "Spanish" | "Swahili" | "Tagalog" | "Tamil" | "Telugu" | "Thai" | "Tigrinya" | "Turkish" | "Ukrainian" | "Urdu" | "Vietnamese" | "" | null;
      iep_status?: string | null;
      /** Format: datetime */
      last_modified?: string;
      location?: components["schemas"]["Location"];
      /** @enum {string|null} */
      race?: "Caucasian" | "Asian" | "Black or African American" | "American Indian" | "Hawaiian or Other Pacific Islander" | "Two or More Races" | "Unknown" | "" | null;
      school?: string;
      schools?: string[];
      sis_id?: string;
      state_id?: string | null;
      student_number?: string | null;
      unweighted_gpa?: string | null;
      weighted_gpa?: string | null;
      ext?: Record<string, never>;
    };
    Teacher: {
      legacy_id?: string;
      /** Format: datetime */
      created?: string;
      credentials?: components["schemas"]["Credentials"];
      district?: string;
      /** Format: datetime */
      last_modified?: string;
      name?: components["schemas"]["Name"];
      school?: string;
      schools?: string[];
      sis_id?: string;
      state_id?: string | null;
      teacher_number?: string | null;
      title?: string | null;
      ext?: Record<string, never>;
    };
    User: {
      id?: string;
      /** Format: datetime */
      created?: string;
      district?: string;
      email?: string | null;
      /** Format: datetime */
      last_modified?: string;
      name?: components["schemas"]["Name"];
      roles?: components["schemas"]["Roles"];
    };
    DistrictContact: {
      id?: string;
      title?: string;
      district?: string;
      email?: string | null;
      name?: components["schemas"]["Name"];
    };
    CourseObject: {
      object?: components["schemas"]["Course"];
    };
    DistrictObject: {
      object?: components["schemas"]["District"];
    };
    ResourceObject: {
      object?: components["schemas"]["Resource"];
    };
    SchoolObject: {
      object?: components["schemas"]["School"];
    };
    SectionObject: {
      object?: components["schemas"]["Section"];
    };
    TermObject: {
      object?: components["schemas"]["Term"];
    };
    UserObject: {
      object?: components["schemas"]["User"];
    };
    EventsResponse: {
      data?: components["schemas"]["EventResponse"][];
      links?: components["schemas"]["Link"][];
    };
    EventResponse: {
      data?: components["schemas"]["Event"];
    };
    Event: {
      type: string;
      id?: string;
      /** Format: datetime */
      created?: string;
    };
    "courses.updated": components["schemas"]["Event"] & {
      data?: components["schemas"]["CourseObject"];
      previous_attributes?: Record<string, never>;
    };
    "courses.created": components["schemas"]["Event"] & {
      data?: components["schemas"]["CourseObject"];
    };
    "courses.deleted": components["schemas"]["Event"] & {
      data?: components["schemas"]["CourseObject"];
    };
    "districts.updated": components["schemas"]["Event"] & {
      data?: components["schemas"]["DistrictObject"];
      previous_attributes?: Record<string, never>;
    };
    "districts.created": components["schemas"]["Event"] & {
      data?: components["schemas"]["DistrictObject"];
    };
    "districts.deleted": components["schemas"]["Event"] & {
      data?: components["schemas"]["DistrictObject"];
    };
    "resources.updated": components["schemas"]["Event"] & {
      data?: components["schemas"]["ResourceObject"];
      previous_attributes?: Record<string, never>;
    };
    "resources.created": components["schemas"]["Event"] & {
      data?: components["schemas"]["ResourceObject"];
    };
    "resources.deleted": components["schemas"]["Event"] & {
      data?: components["schemas"]["ResourceObject"];
    };
    "schools.updated": components["schemas"]["Event"] & {
      data?: components["schemas"]["SchoolObject"];
      previous_attributes?: Record<string, never>;
    };
    "schools.created": components["schemas"]["Event"] & {
      data?: components["schemas"]["SchoolObject"];
    };
    "schools.deleted": components["schemas"]["Event"] & {
      data?: components["schemas"]["SchoolObject"];
    };
    "sections.updated": components["schemas"]["Event"] & {
      data?: components["schemas"]["SectionObject"];
      previous_attributes?: Record<string, never>;
    };
    "sections.created": components["schemas"]["Event"] & {
      data?: components["schemas"]["SectionObject"];
    };
    "sections.deleted": components["schemas"]["Event"] & {
      data?: components["schemas"]["SectionObject"];
    };
    "terms.updated": components["schemas"]["Event"] & {
      data?: components["schemas"]["TermObject"];
      previous_attributes?: Record<string, never>;
    };
    "terms.created": components["schemas"]["Event"] & {
      data?: components["schemas"]["TermObject"];
    };
    "terms.deleted": components["schemas"]["Event"] & {
      data?: components["schemas"]["TermObject"];
    };
    "users.updated": components["schemas"]["Event"] & {
      data?: components["schemas"]["UserObject"];
      previous_attributes?: Record<string, never>;
    };
    "users.created": components["schemas"]["Event"] & {
      data?: components["schemas"]["UserObject"];
    };
    "users.deleted": components["schemas"]["Event"] & {
      data?: components["schemas"]["UserObject"];
    };
  };
  responses: {
    /** @description Bad Request */
    BadRequest: {
      content: {
        "application/json": components["schemas"]["BadRequest"];
      };
    };
    /** @description Internal Error */
    InternalError: {
      content: {
        "application/json": components["schemas"]["InternalError"];
      };
    };
    /** @description Entity Not Found */
    NotFound: {
      content: {
        "application/json": components["schemas"]["NotFound"];
      };
    };
  };
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** @description Returns a list of courses */
  getCourses: {
    parameters: {
      query?: {
        limit?: number;
        starting_after?: string;
        ending_before?: string;
        count?: "" | "true" | "false" | "undefined";
      };
    };
    responses: {
      /** @description OK Response */
      200: {
        content: {
          "application/json": components["schemas"]["CoursesResponse"];
        };
      };
    };
  };
  /** @description Returns a specific course */
  getCourse: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK Response */
      200: {
        content: {
          "application/json": components["schemas"]["CourseResponse"];
        };
      };
      /** @description Entity Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFound"];
        };
      };
    };
  };
  /** @description Returns the district for a course */
  getDistrictForCourse: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK Response */
      200: {
        content: {
          "application/json": components["schemas"]["DistrictResponse"];
        };
      };
      /** @description Entity Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFound"];
        };
      };
    };
  };
  /** @description Returns the resources for a course */
  getResourcesForCourse: {
    parameters: {
      query?: {
        limit?: number;
        starting_after?: string;
        ending_before?: string;
      };
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK Response */
      200: {
        content: {
          "application/json": components["schemas"]["ResourcesResponse"];
        };
      };
      /** @description Entity Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFound"];
        };
      };
    };
  };
  /** @description Returns the schools for a course */
  getSchoolsForCourse: {
    parameters: {
      query?: {
        limit?: number;
        starting_after?: string;
        ending_before?: string;
      };
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK Response */
      200: {
        content: {
          "application/json": components["schemas"]["SchoolsResponse"];
        };
      };
      /** @description Entity Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFound"];
        };
      };
    };
  };
  /** @description Returns the sections for a course */
  getSectionsForCourse: {
    parameters: {
      query?: {
        limit?: number;
        starting_after?: string;
        ending_before?: string;
      };
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK Response */
      200: {
        content: {
          "application/json": components["schemas"]["SectionsResponse"];
        };
      };
      /** @description Entity Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFound"];
        };
      };
    };
  };
  /** @description Returns a list of districts. In practice this will only return the one district associated with the bearer token */
  getDistricts: {
    parameters: {
      query?: {
        count?: "" | "true" | "false" | "undefined";
      };
    };
    responses: {
      /** @description OK Response */
      200: {
        content: {
          "application/json": components["schemas"]["DistrictsResponse"];
        };
      };
    };
  };
  /** @description Returns a specific district */
  getDistrict: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK Response */
      200: {
        content: {
          "application/json": components["schemas"]["DistrictResponse"];
        };
      };
      /** @description Entity Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFound"];
        };
      };
    };
  };
  /** @description Returns a list of resources */
  getResources: {
    parameters: {
      query?: {
        limit?: number;
        starting_after?: string;
        ending_before?: string;
      };
    };
    responses: {
      /** @description OK Response */
      200: {
        content: {
          "application/json": components["schemas"]["ResourcesResponse"];
        };
      };
    };
  };
  /** @description Returns a specific resource */
  getResource: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK Response */
      200: {
        content: {
          "application/json": components["schemas"]["ResourceResponse"];
        };
      };
      /** @description Entity Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFound"];
        };
      };
    };
  };
  /** @description Returns the courses for a resource */
  getCoursesForResource: {
    parameters: {
      query?: {
        limit?: number;
        starting_after?: string;
        ending_before?: string;
      };
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK Response */
      200: {
        content: {
          "application/json": components["schemas"]["CoursesResponse"];
        };
      };
      /** @description Entity Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFound"];
        };
      };
    };
  };
  /** @description Returns the sections for a resource */
  getSectionsForResource: {
    parameters: {
      query?: {
        limit?: number;
        starting_after?: string;
        ending_before?: string;
      };
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK Response */
      200: {
        content: {
          "application/json": components["schemas"]["SectionsResponse"];
        };
      };
      /** @description Entity Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFound"];
        };
      };
    };
  };
  /** @description Returns the student and/or teacher users for a resource */
  getUsersForResource: {
    parameters: {
      query?: {
        role?: "student" | "teacher";
        limit?: number;
        starting_after?: string;
        ending_before?: string;
      };
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK Response */
      200: {
        content: {
          "application/json": components["schemas"]["UsersResponse"];
        };
      };
      /** @description Entity Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFound"];
        };
      };
    };
  };
  /** @description Returns a list of schools */
  getSchools: {
    parameters: {
      query?: {
        limit?: number;
        starting_after?: string;
        ending_before?: string;
        count?: "" | "true" | "false" | "undefined";
      };
    };
    responses: {
      /** @description OK Response */
      200: {
        content: {
          "application/json": components["schemas"]["SchoolsResponse"];
        };
      };
    };
  };
  /** @description Returns a specific school */
  getSchool: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK Response */
      200: {
        content: {
          "application/json": components["schemas"]["SchoolResponse"];
        };
      };
      /** @description Entity Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFound"];
        };
      };
    };
  };
  /** @description Returns the courses for a school */
  getCoursesForSchool: {
    parameters: {
      query?: {
        limit?: number;
        starting_after?: string;
        ending_before?: string;
      };
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK Response */
      200: {
        content: {
          "application/json": components["schemas"]["CoursesResponse"];
        };
      };
      /** @description Entity Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFound"];
        };
      };
    };
  };
  /** @description Returns the district for a school */
  getDistrictForSchool: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK Response */
      200: {
        content: {
          "application/json": components["schemas"]["DistrictResponse"];
        };
      };
      /** @description Entity Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFound"];
        };
      };
    };
  };
  /** @description Returns the sections for a school */
  getSectionsForSchool: {
    parameters: {
      query?: {
        limit?: number;
        starting_after?: string;
        ending_before?: string;
      };
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK Response */
      200: {
        content: {
          "application/json": components["schemas"]["SectionsResponse"];
        };
      };
      /** @description Entity Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFound"];
        };
      };
    };
  };
  /** @description Returns the terms for a school */
  getTermsForSchool: {
    parameters: {
      query?: {
        limit?: number;
        starting_after?: string;
        ending_before?: string;
      };
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK Response */
      200: {
        content: {
          "application/json": components["schemas"]["TermsResponse"];
        };
      };
      /** @description Entity Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFound"];
        };
      };
    };
  };
  /** @description Returns the staff, student, and/or teacher users for a school */
  getUsersForSchool: {
    parameters: {
      query?: {
        role?: "staff" | "student" | "teacher";
        primary?: "" | "true";
        limit?: number;
        starting_after?: string;
        ending_before?: string;
      };
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK Response */
      200: {
        content: {
          "application/json": components["schemas"]["UsersResponse"];
        };
      };
      /** @description Entity Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFound"];
        };
      };
    };
  };
  /** @description Returns a list of sections */
  getSections: {
    parameters: {
      query?: {
        limit?: number;
        starting_after?: string;
        ending_before?: string;
        count?: "" | "true" | "false" | "undefined";
      };
    };
    responses: {
      /** @description OK Response */
      200: {
        content: {
          "application/json": components["schemas"]["SectionsResponse"];
        };
      };
    };
  };
  /** @description Returns a specific section */
  getSection: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK Response */
      200: {
        content: {
          "application/json": components["schemas"]["SectionResponse"];
        };
      };
      /** @description Entity Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFound"];
        };
      };
    };
  };
  /** @description Returns the course for a section */
  getCourseForSection: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK Response */
      200: {
        content: {
          "application/json": components["schemas"]["CourseResponse"];
        };
      };
      /** @description Entity Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFound"];
        };
      };
    };
  };
  /** @description Returns the district for a section */
  getDistrictForSection: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK Response */
      200: {
        content: {
          "application/json": components["schemas"]["DistrictResponse"];
        };
      };
      /** @description Entity Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFound"];
        };
      };
    };
  };
  /** @description Returns the resources for a section */
  getResourcesForSection: {
    parameters: {
      query?: {
        limit?: number;
        starting_after?: string;
        ending_before?: string;
      };
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK Response */
      200: {
        content: {
          "application/json": components["schemas"]["ResourcesResponse"];
        };
      };
      /** @description Entity Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFound"];
        };
      };
    };
  };
  /** @description Returns the school for a section */
  getSchoolForSection: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK Response */
      200: {
        content: {
          "application/json": components["schemas"]["SchoolResponse"];
        };
      };
      /** @description Entity Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFound"];
        };
      };
    };
  };
  /** @description Returns the term for a section */
  getTermForSection: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK Response */
      200: {
        content: {
          "application/json": components["schemas"]["TermResponse"];
        };
      };
      /** @description Entity Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFound"];
        };
      };
    };
  };
  /** @description Returns the student and/or teacher users for a section */
  getUsersForSection: {
    parameters: {
      query?: {
        role?: "student" | "teacher";
        limit?: number;
        starting_after?: string;
        ending_before?: string;
      };
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK Response */
      200: {
        content: {
          "application/json": components["schemas"]["UsersResponse"];
        };
      };
      /** @description Entity Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFound"];
        };
      };
    };
  };
  /** @description Returns a list of terms */
  getTerms: {
    parameters: {
      query?: {
        limit?: number;
        starting_after?: string;
        ending_before?: string;
        count?: "" | "true" | "false" | "undefined";
      };
    };
    responses: {
      /** @description OK Response */
      200: {
        content: {
          "application/json": components["schemas"]["TermsResponse"];
        };
      };
    };
  };
  /** @description Returns a specific term */
  getTerm: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK Response */
      200: {
        content: {
          "application/json": components["schemas"]["TermResponse"];
        };
      };
      /** @description Entity Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFound"];
        };
      };
    };
  };
  /** @description Returns the district for a term */
  getDistrictForTerm: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK Response */
      200: {
        content: {
          "application/json": components["schemas"]["DistrictResponse"];
        };
      };
      /** @description Entity Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFound"];
        };
      };
    };
  };
  /** @description Returns the sections for a term */
  getSectionsForTerm: {
    parameters: {
      query?: {
        limit?: number;
        starting_after?: string;
        ending_before?: string;
      };
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK Response */
      200: {
        content: {
          "application/json": components["schemas"]["SectionsResponse"];
        };
      };
      /** @description Entity Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFound"];
        };
      };
    };
  };
  /** @description Returns the schools for a term */
  getSchoolsForTerm: {
    parameters: {
      query?: {
        limit?: number;
        starting_after?: string;
        ending_before?: string;
      };
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK Response */
      200: {
        content: {
          "application/json": components["schemas"]["SchoolsResponse"];
        };
      };
      /** @description Entity Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFound"];
        };
      };
    };
  };
  /** @description Returns a list of contact, district admin, staff, student, and/or teacher users */
  getUsers: {
    parameters: {
      query?: {
        limit?: number;
        role?: "contact" | "district_admin" | "staff" | "student" | "teacher";
        starting_after?: string;
        ending_before?: string;
        count?: "" | "true" | "false" | "undefined";
      };
    };
    responses: {
      /** @description OK Response */
      200: {
        content: {
          "application/json": components["schemas"]["UsersResponse"];
        };
      };
    };
  };
  /** @description Returns a specific user */
  getUser: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserResponse"];
        };
      };
      /** @description Entity Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFound"];
        };
      };
    };
  };
  /** @description Returns the district for a user */
  getDistrictForUser: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK Response */
      200: {
        content: {
          "application/json": components["schemas"]["DistrictResponse"];
        };
      };
      /** @description Entity Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFound"];
        };
      };
    };
  };
  /** @description Returns the contact users for a student user */
  getContactsForUser: {
    parameters: {
      query?: {
        limit?: number;
        starting_after?: string;
        ending_before?: string;
      };
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK Response */
      200: {
        content: {
          "application/json": components["schemas"]["UsersResponse"];
        };
      };
      /** @description Entity Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFound"];
        };
      };
    };
  };
  /** @description Returns the student users for a teacher or contact user */
  getStudentsForUser: {
    parameters: {
      query?: {
        limit?: number;
        starting_after?: string;
        ending_before?: string;
      };
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK Response */
      200: {
        content: {
          "application/json": components["schemas"]["UsersResponse"];
        };
      };
      /** @description Entity Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFound"];
        };
      };
    };
  };
  /** @description Returns the teacher users for a student user */
  getTeachersForUser: {
    parameters: {
      query?: {
        limit?: number;
        starting_after?: string;
        ending_before?: string;
      };
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK Response */
      200: {
        content: {
          "application/json": components["schemas"]["UsersResponse"];
        };
      };
      /** @description Entity Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFound"];
        };
      };
    };
  };
  /** @description Returns the resources for a user */
  getResourcesForUser: {
    parameters: {
      query?: {
        limit?: number;
        starting_after?: string;
        ending_before?: string;
      };
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK Response */
      200: {
        content: {
          "application/json": components["schemas"]["ResourcesResponse"];
        };
      };
      /** @description Entity Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFound"];
        };
      };
    };
  };
  /** @description Returns the schools for a user */
  getSchoolsForUser: {
    parameters: {
      query?: {
        primary?: "" | "true";
        limit?: number;
        starting_after?: string;
        ending_before?: string;
      };
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK Response */
      200: {
        content: {
          "application/json": components["schemas"]["SchoolsResponse"];
        };
      };
      /** @description Entity Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFound"];
        };
      };
    };
  };
  /** @description Returns the sections for a user */
  getSectionsForUser: {
    parameters: {
      query?: {
        limit?: number;
        starting_after?: string;
        ending_before?: string;
      };
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK Response */
      200: {
        content: {
          "application/json": components["schemas"]["SectionsResponse"];
        };
      };
      /** @description Entity Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFound"];
        };
      };
    };
  };
  /** @description Returns a list of events */
  getEvents: {
    parameters: {
      query?: {
        limit?: number;
        starting_after?: string;
        ending_before?: string;
        school?: string;
        record_type?: string[];
      };
    };
    responses: {
      /** @description OK Response */
      200: {
        content: {
          "application/json": components["schemas"]["EventsResponse"];
        };
      };
      /** @description Entity Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFound"];
        };
      };
    };
  };
  /** @description Returns the specific event */
  getEvent: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK Response */
      200: {
        content: {
          "application/json": components["schemas"]["EventResponse"];
        };
      };
      /** @description Entity Not Found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFound"];
        };
      };
    };
  };
}
